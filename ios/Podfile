# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported

# âœ… Force Xcode & Pods to use correct Node binary
ENV['NODE_BINARY'] = '/Users/anandstephan/.nvm/versions/node/v22.20.0/bin/node'

prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'PartnerApp' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,   # ðŸ‘ˆ disable Hermes while testing
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # ---- Post Install Hook ----
  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )

    # âœ… Patch every build phase to use correct Node path
    installer.pods_project.targets.each do |target|
      target.shell_script_build_phases.each do |phase|
        if phase.shell_script.include?('react-native-xcode.sh') ||
           phase.shell_script.include?('react_native_pods_utils/script_phases.sh') ||
           phase.name.include?('Hermes') ||
           phase.name.include?('ReactCodegen')

          phase.shell_script = "export NODE_BINARY=/Users/anandstephan/.nvm/versions/node/v22.20.0/bin/node\n" + phase.shell_script
        end
      end
    end
  end
end
